{"code":"import { Plugin } from 'obsidian';\r\nimport { Decoration, ViewPlugin, WidgetType } from '@codemirror/view';\r\nimport { RangeSetBuilder } from '@codemirror/state';\r\n/** A widget that displays the computed number of days. */\r\nclass DateWidget extends WidgetType {\r\n    constructor(diffDays) {\r\n        super();\r\n        this.diffDays = diffDays;\r\n    }\r\n    toDOM() {\r\n        const span = document.createElement(\"span\");\r\n        span.style.color = \"var(--text-normal)\";\r\n        span.style.fontStyle = \"italic\";\r\n        span.textContent = this.diffDays.toString();\r\n        return span;\r\n    }\r\n    ignoreEvent() {\r\n        return true;\r\n    }\r\n}\r\n/** Scans the visible document ranges for %YYYY-MM-DD% and returns a set of decorations. */\r\nfunction dateCounterDecoration(view) {\r\n    const builder = new RangeSetBuilder();\r\n    const regex = /%(\\d{4}-\\d{2}-\\d{2})%/g;\r\n    for (const { from, to } of view.visibleRanges) {\r\n        const text = view.state.doc.sliceString(from, to);\r\n        let match;\r\n        while ((match = regex.exec(text)) !== null) {\r\n            const fullMatch = match[0];\r\n            const dateString = match[1];\r\n            const targetDate = new Date(dateString);\r\n            if (isNaN(targetDate.getTime()))\r\n                continue;\r\n            const today = new Date();\r\n            const msPerDay = 1000 * 60 * 60 * 24;\r\n            const utcToday = Date.UTC(today.getFullYear(), today.getMonth(), today.getDate());\r\n            const utcTarget = Date.UTC(targetDate.getFullYear(), targetDate.getMonth(), targetDate.getDate());\r\n            const diffDays = Math.floor((utcToday - utcTarget) / msPerDay);\r\n            const start = from + match.index;\r\n            const end = start + fullMatch.length;\r\n            const deco = Decoration.replace({\r\n                widget: new DateWidget(diffDays),\r\n                inclusive: true\r\n            });\r\n            builder.add(start, end, deco);\r\n        }\r\n    }\r\n    return builder.finish();\r\n}\r\n/** A CodeMirror 6 view plugin that applies our date decorations. */\r\nconst dateCounterViewPlugin = ViewPlugin.fromClass(class {\r\n    constructor(view) {\r\n        this.decorations = dateCounterDecoration(view);\r\n    }\r\n    update(update) {\r\n        if (update.docChanged || update.viewportChanged) {\r\n            this.decorations = dateCounterDecoration(update.view);\r\n        }\r\n    }\r\n}, { decorations: (v) => v.decorations });\r\nexport default class DateCounterPlugin extends Plugin {\r\n    onload() {\r\n        console.log(\"Loading Date Counter Plugin (CM6 edit mode)\");\r\n        this.registerEditorExtension(dateCounterViewPlugin);\r\n    }\r\n    onunload() {\r\n        console.log(\"Unloading Date Counter Plugin (CM6 edit mode)\");\r\n    }\r\n}\r\n","references":["/Users/fredrik/Local/ObsidianLocal/Odinn/.obsidian/plugins/days-since/node_modules/@codemirror/view/dist/index.d.ts","/Users/fredrik/Local/ObsidianLocal/Odinn/.obsidian/plugins/days-since/node_modules/@codemirror/state/dist/index.d.ts"]}
